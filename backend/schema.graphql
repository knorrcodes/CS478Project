scalar Time

directive @minRole(role: Role!) on FIELD_DEFINITION

enum Role {
    MANAGER
    SERVER
    CUSTOMER
}

type Product {
    id: ID!
    name: String!
    desc: String!
    picture: String
    price: Int!
    category: Category!
    wscost: Int!
    num_of_sides: Int!
}

type Category {
    id: ID!
    name: String!
    products: [Product!]!
}

type Server {
    id: ID!
    name: String!
    code: Int!
    manager: Boolean!
}

type Order {
    id: ID!
    start_time: Time!
    end_time: Time
    table: Table!
    server: Server!
    items: [OrderItem!]!
    payments: [Payment!]!
    cust_code: CustCode
}

type Table {
    id: ID!
    num: Int!
    orders(status: OrderStatus = OPENED): [Order!]!
}

type CustCode {
    id: ID!
    start_time: Time!
    end_time: Time
    code: String!
    order: Order!
}

type OrderItem {
    id: ID!
    products: [Product!]!
    order: Order!
}

type Payment {
    id: ID!
    order: Order!
    amount: Int!
    timestamp: Time!
}

enum OrderStatus {
    ANY
    OPENED
    CLOSED
}

type Query {
    product(id: ID!): Product @minRole(role: CUSTOMER)
    products: [Product!]! @minRole(role: CUSTOMER)

    category(id: ID!): Category @minRole(role: CUSTOMER)
    categories: [Category!]! @minRole(role: CUSTOMER)

    server(code: Int!): Server @minRole(role: SERVER)

    table(id: ID!): Table @minRole(role: SERVER)
    tables: [Table!]! @minRole(role: SERVER)

    custcode(id: ID = 0, code: String = ""): CustCode @minRole(role: CUSTOMER)
    custcodes: [CustCode!]! @minRole(role: SERVER)

    orders(server: ID = 0, status: OrderStatus = OPENED): [Order!]! @minRole(role: SERVER)
    order(id: ID = 0, table: ID = 0): Order @minRole(role: SERVER)
}

input NewProductInput {
    name: String!
    desc: String
    picture: String
    price: Int!
    category: ID!
    wscost: Int!
    num_of_sides: Int
}

input NewOrderInput {
    table: ID!
}

input AddPaymentInput {
    order: ID!
    amount: Int!
}

type Mutation {
    createProduct(input: NewProductInput!): Product! @minRole(role: MANAGER)
    createCategory(name: String!): Category! @minRole(role: MANAGER)
    createTable(num: Int!): Table! @minRole(role: MANAGER)
    createCustCode(id: ID!): CustCode! @minRole(role: SERVER)

    startOrder(input: NewOrderInput!): Order! @minRole(role: SERVER)
    closeOrder(id: ID!): Order! @minRole(role: SERVER)
    addItemToOrder(order: ID!, products: [Int!]!): OrderItem! @minRole(role: CUSTOMER)
    deleteOrderItem(id: ID!): Order! @minRole(role: SERVER)
    applyPayment(input: AddPaymentInput!): Payment @minRole(role: SERVER)
}
