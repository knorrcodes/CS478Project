type Product {
    id: ID!
    name: String!
    desc: String!
    picture: String
    price: Int!
    category: Category!
    wscost: Int!
    num_of_sides: Int!
}

type Category {
    id: ID!
    name: String!
}

type Server{
    id: ID!
    name: String!
    code: Int!
    manager: Boolean!
}

type Table {
    id: ID!
    num: Int!
    # orders: [Order!]!
}

type Query {
    product(id: ID!): Product
    products: [Product!]!
    category(id: ID!): Category
    categories: [Category!]!
    server(code: Int!): Server
    table(id: ID!): Table
    tables: [Table!]!
}

input InputID {
    id: ID!
}

input NewCategory {
    name: String!
}

input NewProduct {
    name: String!
    desc: String
    picture: String
    price: Int!
    category: InputID!
    wscost: Int!
    num_of_sides: Int
}

input NewTable {
    num: Int!
}

type Mutation {
    createProduct(p: NewProduct!): Product!
    createCategory(c: NewCategory!): Category!
    createTable(t: NewTable!): Table!
}
